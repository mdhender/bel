// Code generated by "stringer -type opcode bel/opcode.go"; DO NOT EDIT.

package bel

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[opcLoad-0]
	_ = x[opcTopLevel0-1]
	_ = x[opcTopLevel1-2]
	_ = x[opcRead-3]
	_ = x[opcValuePrint-4]
	_ = x[opcError0-5]
	_ = x[opcError1-6]
	_ = x[opcReadSExpr-7]
	_ = x[opcP0List-8]
	_ = x[opcP1List-9]
	_ = x[opcInvalid-10]
}

const _opcode_name = "opcLoadopcTopLevel0opcTopLevel1opcReadopcValuePrintopcError0opcError1opcReadSExpropcP0ListopcP1ListopcInvalid"

var _opcode_index = [...]uint8{0, 7, 19, 31, 38, 51, 60, 69, 81, 90, 99, 109}

func (i opcode) String() string {
	if i < 0 || i >= opcode(len(_opcode_index)-1) {
		return "opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _opcode_name[_opcode_index[i]:_opcode_index[i+1]]
}
